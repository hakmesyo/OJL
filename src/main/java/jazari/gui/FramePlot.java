/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jazari.gui;

import com.formdev.flatlaf.FlatDarkLaf;
import jazari.types.TFigureAttribute;
import jazari.matrix.CMatrix;
import jazari.factory.FactoryMatrix;
import jazari.factory.FactoryUtils;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.JComponent;
import javax.swing.JSlider;
import javax.swing.KeyStroke;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author BAP1
 */
public class FramePlot extends javax.swing.JFrame {
    static {
        try {
            UIManager.setLookAndFeel(new FlatDarkLaf());
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(FlatLaf.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private CMatrix cm;
    private TFigureAttribute figureAttribute;
    private boolean isSort = true;

    /**
     * Creates new form CPlot
     */
    public FramePlot(CMatrix cm) {
        this.cm = cm.clone();
        this.setTitle(cm.name + " :: Plot");
        initComponents();
        TFigureAttribute attr = new TFigureAttribute();
        attr.items=cm.getColumnNamesArray();
        this.figureAttribute = attr;
        getPlotPanel().setFigureAttribute(attr);
        getPlotPanel().setRandomSeed(System.currentTimeMillis());
        cm.plotPanel = getPlotPanel();
        initialize();
    }

    public FramePlot(CMatrix cm, float[] x) {
        this.cm = cm.clone();
        this.setTitle(cm.name + " :: Plot");
        initComponents();
        TFigureAttribute attr = new TFigureAttribute();
        this.figureAttribute = attr;
        getPlotPanel().setFigureAttribute(attr);
        getPlotPanel().setXAxis(x);
        getPlotPanel().setRandomSeed(System.currentTimeMillis());
        cm.plotPanel = getPlotPanel();
        initialize();
    }

    public FramePlot(CMatrix cm, TFigureAttribute attr) {
        this.cm = cm.clone();
        this.figureAttribute = attr;
        this.setTitle((attr.figureCaption.isEmpty()) ? cm.name + " :: Plot" : attr.figureCaption);
        initComponents();
        getPlotPanel().setFigureAttribute(this.figureAttribute);
        getPlotPanel().setRandomSeed(System.currentTimeMillis());
        this.cm.plotPanel = getPlotPanel();
        initialize();
    }

    public FramePlot(CMatrix cm, TFigureAttribute attr, float[] x) {
        this.cm = cm.clone();
        this.figureAttribute = attr;
        this.setTitle((attr.figureCaption.isEmpty()) ? cm.name + " :: Plot" : attr.figureCaption);
        initComponents();
        getPlotPanel().setFigureAttribute(this.figureAttribute);
        cm.plotPanel = getPlotPanel();
        getPlotPanel().setRandomSeed(System.currentTimeMillis());
        getPlotPanel().setXAxis(x);
        initialize();
    }

    public void setMatrix(CMatrix cm) {
        this.cm = cm;
        getPlotPanel().setMatrix(cm);
    }

    public void setMatrix(CMatrix cm,boolean isColorPersist) {
        this.cm = cm;
        if (isColorPersist) {
            getPlotPanel().setMatrix(cm,isColorPersist);
        }else{
            getPlotPanel().setMatrix(cm);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_plot = new jazari.gui.PanelPlot(cm);
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        btn_dataGrid = new javax.swing.JButton();
        btn_scatter = new javax.swing.JButton();
        btn_save = new javax.swing.JButton();
        txt_dpi = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btn_refresh = new javax.swing.JButton();
        chk_legend = new javax.swing.JCheckBox();
        chk_dark_mode = new javax.swing.JCheckBox();
        chk_gridy = new javax.swing.JCheckBox();
        chk_gridx = new javax.swing.JCheckBox();
        combo_line_type = new javax.swing.JComboBox<>();
        slider_sleep = new javax.swing.JSlider();
        lbl_sleep = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        panel_plot.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout panel_plotLayout = new javax.swing.GroupLayout(panel_plot);
        panel_plot.setLayout(panel_plotLayout);
        panel_plotLayout.setHorizontalGroup(
            panel_plotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panel_plotLayout.setVerticalGroup(
            panel_plotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 552, Short.MAX_VALUE)
        );

        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        btn_dataGrid.setText("Data Grid");
        btn_dataGrid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_dataGridActionPerformed(evt);
            }
        });

        btn_scatter.setText("scatter");
        btn_scatter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_scatterActionPerformed(evt);
            }
        });

        btn_save.setText("Save");
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });

        txt_dpi.setText("96");

        jLabel2.setText("dpi");

        btn_refresh.setText("refresh");
        btn_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_refreshActionPerformed(evt);
            }
        });

        chk_legend.setSelected(true);
        chk_legend.setText("legend");
        chk_legend.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chk_legendItemStateChanged(evt);
            }
        });
        chk_legend.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                chk_legendPropertyChange(evt);
            }
        });

        chk_dark_mode.setSelected(true);
        chk_dark_mode.setText("dark mode");
        chk_dark_mode.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chk_dark_modeİtemStateChanged(evt);
            }
        });

        chk_gridy.setSelected(true);
        chk_gridy.setText("gridy");
        chk_gridy.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chk_gridyİtemStateChanged(evt);
            }
        });

        chk_gridx.setSelected(true);
        chk_gridx.setText("gridx");
        chk_gridx.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chk_gridxİtemStateChanged(evt);
            }
        });

        combo_line_type.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        combo_line_type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", ".", "*", "o" }));
        combo_line_type.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combo_line_typeİtemStateChanged(evt);
            }
        });

        slider_sleep.setMaximum(5000);
        slider_sleep.setPaintLabels(true);
        slider_sleep.setPaintTicks(true);
        slider_sleep.setToolTipText("set loop speed");
        slider_sleep.setValue(5000);
        slider_sleep.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slider_sleepStateChanged(evt);
            }
        });
        slider_sleep.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                slider_sleepCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });

        lbl_sleep.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lbl_sleep.setText("0");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btn_dataGrid)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_scatter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_save, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_dpi, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_refresh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(lbl_sleep, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(slider_sleep, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(combo_line_type, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chk_gridx, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chk_gridy)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chk_dark_mode)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chk_legend)
                .addGap(14, 14, 14))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_dataGrid)
                    .addComponent(btn_scatter)
                    .addComponent(btn_save)
                    .addComponent(txt_dpi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(btn_refresh)
                    .addComponent(chk_legend)
                    .addComponent(chk_dark_mode)
                    .addComponent(chk_gridy)
                    .addComponent(chk_gridx)
                    .addComponent(combo_line_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(slider_sleep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_sleep))
                .addGap(0, 77, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_plot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel_plot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_dataGridActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_dataGridActionPerformed
        CMatrix cm = getPlotPanel().getMatrix();
        new FrameDataGrid(cm).setVisible(true);
    }//GEN-LAST:event_btn_dataGridActionPerformed

    private void btn_scatterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_scatterActionPerformed
        if (getPlotPanel().getMatrix().getColumnNumber()<2) {
            System.err.println("number of columns should be at least 2");
            return;
        }
        TFigureAttribute attr = new TFigureAttribute();
        attr.figureCaption = this.getTitle();
        getPlotPanel().getMatrix().scatter(attr);
    }//GEN-LAST:event_btn_scatterActionPerformed

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
        savePanel();
    }//GEN-LAST:event_btn_saveActionPerformed

    private void btn_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_refreshActionPerformed
        getPlotPanel().setMatrix(this.cm);
    }//GEN-LAST:event_btn_refreshActionPerformed

    private void chk_legendPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_chk_legendPropertyChange
        
    }//GEN-LAST:event_chk_legendPropertyChange

    private void chk_legendItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chk_legendItemStateChanged
        getPlotPanel().setLegend(chk_legend.isSelected());
    }//GEN-LAST:event_chk_legendItemStateChanged

    private void chk_dark_modeİtemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chk_dark_modeİtemStateChanged
        getPlotPanel().setDarkMode(chk_dark_mode.isSelected());
    }//GEN-LAST:event_chk_dark_modeİtemStateChanged

    private void chk_gridyİtemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chk_gridyİtemStateChanged
        getPlotPanel().setGridy(chk_gridy.isSelected());
    }//GEN-LAST:event_chk_gridyİtemStateChanged

    private void chk_gridxİtemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chk_gridxİtemStateChanged
        getPlotPanel().setGridx(chk_gridx.isSelected());
    }//GEN-LAST:event_chk_gridxİtemStateChanged

    private void combo_line_typeİtemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combo_line_typeİtemStateChanged
        getPlotPanel().setPointType(combo_line_type.getSelectedItem().toString());
    }//GEN-LAST:event_combo_line_typeİtemStateChanged

    private void slider_sleepCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_slider_sleepCaretPositionChanged
        
    }//GEN-LAST:event_slider_sleepCaretPositionChanged

    private void slider_sleepStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slider_sleepStateChanged
        lbl_sleep.setText(slider_sleep.getValue()+"");
    }//GEN-LAST:event_slider_sleepStateChanged

    public PanelPlot getPlotPanel() {
        return (PanelPlot) panel_plot;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            /* Set the Nimbus look and feel */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
            * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
            */
            UIManager.setLookAndFeel(new FlatDarkLaf());
//        try {
//            
////            javax.swing.UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
////            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
////                if ("Nimbus".equals(info.getName())) {
////                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
////                    break;
////                }
////            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(FramePlot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(FramePlot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(FramePlot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(FramePlot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//</editor-fold>
//</editor-fold>
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(FramePlot.class.getName()).log(Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FramePlot frm = new FramePlot(CMatrix.getInstance().rand(2, 13));
                frm.setVisible(true);
                String[] s = {"Observed", "Simulated"};
                TFigureAttribute attr = new TFigureAttribute();
                attr.items = s;
                frm.getPlotPanel().setFigureAttribute(attr);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_dataGrid;
    private javax.swing.JButton btn_refresh;
    private javax.swing.JButton btn_save;
    private javax.swing.JButton btn_scatter;
    private javax.swing.JCheckBox chk_dark_mode;
    private javax.swing.JCheckBox chk_gridx;
    private javax.swing.JCheckBox chk_gridy;
    private javax.swing.JCheckBox chk_legend;
    private javax.swing.JComboBox<String> combo_line_type;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_sleep;
    private javax.swing.JPanel panel_plot;
    private javax.swing.JSlider slider_sleep;
    private javax.swing.JTextField txt_dpi;
    // End of variables declaration//GEN-END:variables

    private void savePanel() {
        FactoryUtils.savePanel(getPlotPanel(),txt_dpi.getText());
    }

    private void sort() {
        if (isSort) {
            String sortType = FactoryUtils.inputMessage("Write sorting type [asc,desc]", "asc");
            CMatrix m2 = cm.clone();
            float[][] d = m2.toFloatArray2D();
            float[] d2 = FactoryMatrix.clone(d[0]);
            int[] index = FactoryUtils.sortArrayAndReturnIndex(d2, sortType);
            CMatrix cmx = FactoryUtils.sortRows(m2, index);
            getPlotPanel().setMatrix(cmx.transpose());
            isSort = false;
            //btnSort.setText("unsort");
            return;
        } else {
            getPlotPanel().setMatrix(cm);
            //btnSort.setText("sort");
            isSort = true;
        }
    }

    public void setPlotType(String plotType) {
        getPlotPanel().setPlotType(plotType);
    }

    public void setFigureAttribute(TFigureAttribute fg) {
        this.figureAttribute = fg;
        getPlotPanel().setFigureAttribute(this.figureAttribute);
    }

    private void initialize() {
        getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(
                KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), "Cancel");
        getRootPane().getActionMap().put("Cancel", new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                dispose();
            }
        });
        slider_sleep.setVisible(false);
    }

    public void setSliderVisible(boolean fromAnimated) {
        slider_sleep.setVisible(fromAnimated);
    }

    public void setSliderPosition(int thread_sleep) {
        slider_sleep.setValue(thread_sleep);
    }

    public int getSliderSleepValue() {
        return slider_sleep.getValue();
    }
    
    public JSlider getSliderSleep() {
        return slider_sleep;
    }
}
